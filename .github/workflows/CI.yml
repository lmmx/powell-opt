# This file is autogenerated by maturin v1.8.2
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Confirm commit message matched
        run: echo "Commit message matched the condition."
  #   # This job only runs if the commit message meets the condition
  #   if: >
  #     (
  #       (
  #         (github.event_name == 'push')
  #         || (github.event_name == 'pull_request' && github.event.pull_request.user.login == 'lmmx')
  #       )
  #       &&
  #       (
  #         startsWith(github.event.head_commit.message, 'chore(release)') ||
  #         contains(github.event.head_commit.message, 'cibuildwheel')
  #       )
  #     )
  #     || (github.event_name == 'workflow_dispatch')

  linux:
    needs: [check-commit]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
            before: yum install -y openssl-devel && openssl version -d
            dockeropts: ""
            features: ""
            manylinux: auto
          - runner: ubuntu-22.04
            target: x86
            before: yum install -y openssl-devel.i686 pkg-config
            dockeropts: >
              --env CC_i686_unknown_linux_gnu=/usr/bin/i686-linux-gnu-gcc
              --env CFLAGS_i686_unknown_linux_gnu=-m32
              --env LIBRARY_PATH=/usr/lib:$LIBRARY_PATH
              --env LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH
              --env PKG_CONFIG_ALLOW_CROSS=1
              --env PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib64/pkgconfig
              --env OPENSSL_DIR=/usr
            features: ""
            manylinux: 2_28
          - runner: ubuntu-22.04
            target: aarch64
            before: sudo apt-get update -y && sudo apt-get install pkg-config -y
            dockeropts: --env OPENSSL_DIR=/usr
            features: "--features openssl-vendored"
            manylinux: 2_28
          - runner: ubuntu-22.04
            target: armv7
            before: sudo apt-get update -y && sudo apt-get install pkg-config -y
            dockeropts: --env OPENSSL_DIR=/usr
            features: "--features openssl-vendored"
            manylinux: auto
          - runner: ubuntu-22.04
            target: s390x
            before: sudo apt-get update -y && sudo apt-get install pkg-config -y
            dockeropts: --env OPENSSL_DIR=/usr
            features: "--features openssl-vendored"
            manylinux: auto
          - runner: ubuntu-22.04
            target: ppc64le
            before: sudo apt-get update -y && sudo apt-get install pkg-config -y
            dockeropts: --env OPENSSL_DIR=/usr
            features: "--features openssl-vendored"
            manylinux: auto
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@aef21716ff3dcae8a1c301d23ec3e4446972a6e3 # v1.49.1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: ${{ matrix.platform.manylinux }}
          before-script-linux: |
            ${{ matrix.platform.before }}
          docker-options: ${{ matrix.platform.dockeropts }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    needs: [check-commit]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: i686
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    needs: [check-commit]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    needs: [check-commit]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    needs: [check-commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, macos, sdist, windows]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
